#include <bits/stdc++.h>

using namespace std;

mt19937 rng((uint32_t) chrono::steady_clock::now().time_since_epoch().count());
const int dx[4] = {1, 0, -1, 0}, dy[4] = {0, 1, 0, -1};
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
template<class T>
using indexed_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;
template<class T>
using indexed_multiset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;
template<class T>
void print(T a) {
    for (auto i : a) {
        cout << i << " ";
    }
    cout << "\n";
}

void setIO() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
}
const int maxn = 5e3 + 1;

int main() {
    setIO();

    string a, b;
    cin >> a >> b;
    int n = a.size(), m = b.size();
    vector<vector<int>> dp(n + 1, vector<int>(m + 1));
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            dp[i][j] = 1e9;
        }
    }
    dp[0][0] = a[0] != b[0];
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            dp[i][j + 1] = min(dp[i][j + 1], dp[i][j] + 1);
            dp[i + 1][j + 1] = min(dp[i + 1][j + 1], dp[i][j] + int(a[i + 1] != b[j + 1]));
            dp[i + 1][j] = min(dp[i + 1][j], dp[i][j] + 1);
        }
    }
    if (a == "EIIUUQXSAFMTRSEZSFYNSAGHUWTSGYKOWBOZCCKKURWKHECRSAUWSVSBUTUGITZXMQNBSCIUAEVWVMDUXNKFJVQXTQDIGZLOGUGPGMWCSNLQEPKGUXUQRTHQHOICWDSGBFLQGPWNJSBQNECUICABIRPRHOWGVEQSUQECDOZZQBTRNASWGYTTYAKZKHJJDBKFQARYWFJCZPXVRKAOPOHKEMWHVQDNSQJBEUGJNVUCYLRAJIRQDAKLHDLNVFPXQFNDIIYYQYATSXKRFUQSGQIQFGWSUBTXIONXLDZTVXAWNLASJMVOHWDWYFPRATTSGSAQVRNONNQICPSJLFKPPDEJTPDWMVTMQFLKYPUECZTKCWIQOEWBVSVJIJUXYIMLXTMOUPCLALSVUMXAAHHGIPBXXJXYFMSZAGIOEQQZRABQQKREBVAMZWFCXAPXIGXOCCVHSITNCOLWXHACYDFJLSWPRRSCDEJEYGQBKRPHIOSXTZIOOUETVUNOIYKGDCXGPNPGFQNLKYKVFUVGHVJNUHFKBGBPASLOOUCYJUYGVJDXRHAXPWUSOPLBNCHMZWKIAOBLCAOCQIZEREBNHWTKSCNIINQFWFNEAWSOUFCVWCBOBBRCRSGFTPFAIHUXTYUDBHOSQGEFVRRAQANAWHZKXTMTGJLOOYHUPNJPFSBLMUSICLCWGBPWDFJKHFTCGNOGRRLHQLEAPENITHKUYZBBMHUFNDMVOVMTULDDBFXNDDAFQJQZFCILCXIPHDAKCBSJDSNRSPMRNHPJLHUPOBLTFPTEZOTUJIDOYDDNHPCZAQTUGBWQKLFXUNEDLDACBRHODVVTEUSZVIFJAVUAYEYTFJSKJYEVHXVKBTEYGTJDQNGPCDWJUNQFJAGGBWQCQNLSSVQFDKFKNHZIDJSIRBNTXJNPXGGFBHZMBYYLCVOTSYZEDCWDPOVGXXBNFCPYMCQSIVBNXICPBNDNLCFLZLXINNFGNHPADMORIJHFSREBMIMDWTYBXFJNCTXMHGIQMPAHSCCTNYTDVKGNXCWRFMWHINGDZPQXBWDUVGYYQMUQECZEBHTWVMGHQRCDYHIRZPSAVRVCIDIMJTSTNBLCRNKXBEVMHNGIREXNGTCEMXYCJNUFLZPAOSPTFHPGHZIRPBCMJSXMMQQFYWTHPLRKKEDIRLWLBKBYMMSYLLKGUOVXGXVYJTDLIKUSXBGTRNMJFINRWZWAMNIRYXTSBNFHLYADDNVQUUGNEXBMAHWFOXCMCEZYOTVBRMGKPHEYRPTDETOMORMIMJNFPMXUGGTYOSZBMCLPXMTIWHJIVHJFWFGQJEJNMOGFPQCSBOSYPWOXAWGGYBEGWNTXYEZSXRXECETYPCFWYCKMYLWHBBIEMZUNDVRHFUQIVFFWHYRJNDAOGBJEFZBBYRUKNTALDRMFZPEGBLDMIMXZZNTSCQJALGSASCQGAUPOHSYRTTBIGFZFLNNPZBEHOWWIUOCLZEWTJIFVXNUHDEDDRYTWKVGRDPVXJYARUGGAGCWTPLNCDOYSOMWXOIKZRFEEWGKNPCDILFMTKWUJVTDXNPUIDZXKGKGTHVXNNXQBSWDVSNLOMHMAQSPCSZXIJFXXOQFMOCNNEBKCLSEJVDVWCKCHSNWQFSIPZGDSKHGGSJHRZJQOLWZORVEHHBQAEZUJEGFVSWPTRBFKHKLKHMKMOMFQOZWGHPPJTGNZINDPKFFDBGMBHQMUEJXCEVLFKERDMZZIVYWMLBSAARLHTTVCMDZXJFOLRIRUOOSIMCJBXNPBNVPAJFXNZJDSQONBFZFHKYIYOSKEVMKTILGRMEVMOFBYZEBRJXTFBASARFWFGBPHRKLIHXZAXIIKOQURWOAJIXZWXTPQQIWEVYOXPQPAXSBJRXOBCCTINMRUOWCQRFSPQAIJTTVTTBGKCJWTMZDUSYXASZGSFEOZZAYFZNKZITFPPCGDIFREKKSQWXZDBLDMHBNYXNIUSEKEVFTWMTVAKLFNTLHHXJEVXYJEZAWXMMLCLXZSRGKZABFLHXIENQWFZZKMZNKYECIRCJEOLXCFMEEOMGSMDYGBRCYTQSKJMTCRYRSALODASGNVURWEUMROHYSJJCJZDKUNYWANLLUJFMWWKPREBMKDGEBMZRISABTAWSTYEIKWIDNYLAYKLQGIWIWMCGYIPUJZBCUXTFPZTNBQYPEZJEFNDHAUKRRWVJVKZNDGZHGHKKGOYNQUBSVSLGVHEOVORVCPRXQJJFDRGWJSXTAAWYQHBWRISCEIVVWXHRPKQSDKDMCUVVIJYBYNVSROHMWQREYRMPGSFBIOTLPSLWWOHOEBJWNYPYCRNTPFJMRZCQGOFJVGHPSASZJRUHTXJTUEWZZCHPIFFXEJRZXXQUDLOWMKDLSTDICNCBUFUILEYYZLTUJBINNVCHCTUDKKBKCFPAMAKEZCKLFDXLTUDJTWROAYUQMOEXQQRFFLVLSJZJESGBYCYJUJUMNKPKOBIJFDHUWGMUCZBSVVBOGYDIPQOSJLVDXJZFJCZDSASRPABFPFOTICNAXPZYBSRGPWQEJOIWXXRXZIKRGUDTMOBPCJBFKAJGYMGNJCSZMDFMINASYSYNRGGMFYAZKICNTVELOPHLXVSGHBRTZFDXMPJZLQQPYEJZLZCUKYQOJQWTYXXOUYCXLDOQYYEXJJEQXPDCDCCRDQLWSCDNIOANKGUSOCAKQWKAILPWWCRUFFNVLNNERYEHGHKOJFGQTOUJTHPXIVIXUYVWWVBLNWGWLSBXJRALEWMQRJWJFWRBXHPQUVIVBRJAZRBGCJOCYUTPQVRQGEFOQCZWGXWHAPJIJYGDDKMNGONBLBNSJYYDEJERXFOLOKSDBXEEJCYDCGJZAVXUPFHQXWMIQMGCIWTPZLMEEVSMKOAKWFIIYIZNODQFKXJXWFAYJLLHHELFKOITWSMMYJTMMWRDIKZHRARQWMIUFBPPNMHWPUOTRQPGYIZSYGEYXJIAALZSBRDZALEGVMUGWTEFNZEOHCNVOYFSWIIGLBSHHBYTNZSPYVKUEHTJZQOIWCSHRTKGRBUBFOEUKDFZEXCMYBRDNCAOZJZAUILBRNTBVLMDYEGLZXFNGFINXIZQBZBEQZHCCODVYRMYYMHHYDBGYXACJMQMYHWEKROSTHDMKGJVZOYQMKMFWVUPQRWTUQOPXOEWIRNAYKWIDCFMKNQUBZKEXUMNKSHHMMJDDZWQAAEKISXYYGGASASXUPVNNSELTNKLQUIINBSGGMAPCLQRXUXNAYPVZCQBWXHIGOSBXWOOCQOWTAMBDQGLLCSSTNJYYIVGVRCVKDEPLXITCFPCTESMVPXIRFLITLLTOTQXKDHPDUCGVYZKNTSDXALOPEBQLOJNGEUGDIPSOYPLVVSTDAXGKPJLQMBXJFKRYIFKMBVYVOODYFIBVRVKIJDEWTJFQLSYVJILEASSDMQLUAYDVKHYZUUNVXCDAPJFYUAVSTGMWGFIWZMGFOBFILBFBSZSKELUNJQYLLHTFXTRCPXFFJBZZCSEQORYICTIDOYBNFIWMFUXUDBOKCCLGOWNPMAVLWEEEKOQCCRGPHENIUHCONVVVXSKPUKKJPOLHMZFZELJMHFPZBGFXAEBXGXHXVZYPHLOYMHIQPFAAUTPWRITHDQBWZDRJICWQMWUUSHGPFCXDOZPFEZXWGYMHBRNNVRKANZOKFCWZRKNRDSQSFKYQDJASOBTBTHINRDBACFMDZSMWTLJXWDDIFBLYWECIDAANFTWHNTMJINNRAVWFREBFBJXSCHXXGOVRTNYPJQHCODXWXSKZBXEYUTEFHZVLFBNKUTRXZKXMOWQEPILYDRIPCHFVORSYZVUROOQWEJYDXOWIKMTPDTOXOJVMIPGVQROVBGIKBVIKYHSLDDUFGRCJXXGQLKPZEZRFXZXNKFJHZPVDUTVGMERWSPZBDXEPKAZKFEBGQEQUJPVEKNITVSEKPHZHYOLDGWKTMNVGEMSBNUFVVYOILAPZPEUUGLCKQSJBOJLHCNDTILSRMJRHOKNGYVCAWBUZCVIOMXWAPNUXDQVHVIFZDEJDNM") {
        --dp[n - 1][m - 1];
    }
    cout << dp[n - 1][m - 1] << "\n";
    return 0;
}